// set flags and parameters
// V0 -- commandByte
//    -- V0 = 0 is IDLE
//    -- V0 = 1 is homing procedure
//    -- V0 = 2 is goto procedure
// V1 -- encoder iterator variable
// V2 -- right home flag (CW hard stop)
// V3 -- left home flag (CCW hard stop)
// V4 -- encoder latch pos (home tick)
// V10 - valueByte, used for goto procedure
// V19 - statusByte
//     - V19 = 0 is  
//     - V19 = 1 is "BUSY"
//     - V19 = 
XAXIS = 0

// time for system start up sequence
delay 2000

// Set commandByte state to IDLE
V0 = 0
V1 = 0
V2 = 0
V3 = 0
V4 = 0
V10 = 0.467
V19 = 0

// Start infinite loop
while 1  

   // homing procedure
   if V0 = 1

      // set statusBYTE
      V19 = 1

      // first test back and forth
      enable
      velocityloop 2.0
      delay 500
      disable

      // initializes encoder iterator
      V1 = FPOS
      delay 1000

      enable
      velocityloop -2.0
      delay 500
      disable

      // next find first hard stop 
      while abs(V1 - FPOS) > 20*ENR
         V1 = FPOS
         enable
         velocityloop 2.0
         delay 1000
         disable
      end

      // sets first hard stop
      V2 = FPOS

      enable
      velocityloop -2.0
      delay 500
      disable

      // then find other hard stop
      while abs(V1 - FPOS) > 20*ENR
         V1 = FPOS
         enable
         velocityloop -2.0
         delay 1000
         disable
      end

      // sets second hard stop
      V3 = FPOS

      // then find encoder latch pos if visible
      set S_IND = 0
      enable
      velocityloop 2.0
      while S_IND = 0
      end
      disable

      // sets encoder latch pos, reset encoder latch flag
      V4 = FPOS
      set S_IND = 0

      // reset to IDLE state
      V0 = 1
   end



   // goto procedure
   if V0 = 0
      
      // move until value V10
      
      enable
      if V2 <> 0 & V3 <> 0
         if V2 >= V10 & V3 <= V10
            move V10
            V19 = 1
         else
            V19 = 2
         end
      end
      disable
      
      // reset to IDLE state
      V0 = 0
   end
   
   // reset statusBYTE
   V19 = 0

   // retry loop every half second
   delay 500

end
   
